"""
routing.py: defines services provided by the collection of protocols
"""

from typing import Tuple

import netaddr

from core.emane.nodes import EmaneNet
from core.emulator.enumerations import LinkTypes
from core.nodes.base import CoreNode
from core.nodes.interface import DEFAULT_MTU, CoreInterface
from core.nodes.network import PtpNet, WlanNode
from core.nodes.physical import Rj45Node
from core.services.coreservices import CoreService


class Hello(CoreService):
  name: str = "hello"
  group: str = "Networking"

  configs: Tuple[str, ...] = ("helloboot.sh", )

  startup: Tuple[str, ...] = ("bash helloboot.sh", )

  @classmethod
  def generate_config(cls, node: CoreNode, filename: str) -> None:
    if filename == cls.configs[0]:
      return cls.generate_hello_boot(node)
    else:
      raise ValueError("file name (%s) is not a known configuration: %s",
                       filename, cls.configs)

  @classmethod
  def generate_hello_boot(cls, node: CoreNode) -> str:
    """
    Generate shell script used to boot the daemons
    """
    return """\
#!/bin/sh
# auto-generated by hello service (networking.py)

/home/ben/projects/routing/hello/build/server -d

"""

